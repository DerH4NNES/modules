<?php

/**
 * Implements hook_uninstall().
 */
function degov_media_image_uninstall() {
  // Remove the image bundle dependency on the entity media browser.
  $dependencies = \Drupal::config('entity_browser.browser.media_browser')
    ->get('dependencies.config');
  foreach ($dependencies as $key => $dependency) {
    if ($dependency == 'media_entity.bundle.image') {
      unset($dependencies[$key]);
    }
  }
  $dependencies = array_values($dependencies);
  \Drupal::configFactory()->getEditable('entity_browser.browser.media_browser')
    ->set('dependencies.config', $dependencies)
    ->save(TRUE);

  // Remove the image tab from the entity media browser.
  $key = "cf5d9a31-e053-413a-8666-a2c3fedbc4a0";
  $widgets = \Drupal::config("entity_browser.browser.media_browser")
    ->get("widgets");
  if (!empty($widgets[$key])) {
    unset($widgets[$key]);
    \Drupal::configFactory()->getEditable("entity_browser.browser.media_browser")
      ->set("widgets", $widgets)
      ->save(TRUE);
  }
}

/**
 * Fixes copyright/date field display, order and left-over configuration.
 */
function degov_media_image_update_8008() {
  // Remove field_image_copyright residence from the config in the default entity form.
  updateActiveConfig(
    "core.entity_form_display.media.image.default",
    "third_party_settings.field_group.group_description.children",
    "field_image_copyright",
    "remove"
  );
  // Remove field_image_date from field config common group in the default entity form.
  updateActiveConfig(
    "core.entity_form_display.media.image.default",
    "third_party_settings.field_group.group_common.children",
    "field_image_date",
    "remove"
  );
  // Add the date field to the group description children in the default entity form.
  updateActiveConfig(
    "core.entity_form_display.media.image.default",
    "third_party_settings.field_group.group_description.children",
    "field_image_date",
    "add"
  );
  // Remove field_copyright in the hidden section of the default view mode.
  updateActiveConfig(
    "core.entity_view_display.media.image.default",
    "hidden",
    "field_copyright",
    "remove",
    true
  );
  // Remove the image copyright field from the group description children in the media entity form.
  updateActiveConfig(
    "core.entity_form_display.media.image.media_browser",
    "third_party_settings.field_group.group_description.children",
    "field_image_copyright",
    "remove"
  );
  // Add the copyright field to the group description children in the media entity form.
  updateActiveConfig(
    "core.entity_form_display.media.image.media_browser",
    "third_party_settings.field_group.group_description.children",
    "field_copyright",
    "add"
  );
  // Remove the image copyright field from the group description children in the usage view mode.
  updateActiveConfig(
    "core.entity_view_display.media.image.usage",
    "dependencies.config",
    "field.field.media.image.field_image_copyright",
    "remove"
  );
  // Remove the image copyright field from the content in the usage view mode.
  updateActiveConfig(
    "core.entity_view_display.media.image.usage",
    "content",
    "field_image_copyright",
    "remove",
    true
  );
  /** @var \Drupal\degov_common\DegovModuleUpdater $moduleUpdateService */
  $moduleUpdaterService = \Drupal::service('degov_config.module_updater');
  $moduleUpdaterService->applyUpdates('degov_media_image', '8008');
}

/**
 * @TODO make this function available for all modules. Place in degov_common in config update service.
 */

/**
 * Helper function to update the removal/adding of single configuration fields.
 *
 * @param string $configFile
 *   Configuration file name without the extension.
 * @param string $setting
 *   Settings path to the configuration that needs editing.
 * @param string $field_name
 *   Field name that needs to be removed or added.
 * @param string $operation
 *   This arguments accepts 'add' or 'remove'.
 * @param bool $is_key
 *   By default false, if true the key will be used to compare the field name.
 */
function updateActiveConfig($configFile, $setting, $field_name, $operation, $is_key = false) {
  $defaultForm = \Drupal::configFactory()->getEditable($configFile);
  $defaultFormConfig = $defaultForm->get($setting);
  // Keep a clean array, in case we meet those duplicate value arrays.
  $clean_array = [];
  if ($operation == 'add') {
    $clean_array = [$field_name];
  }
  foreach ($defaultFormConfig as $key => $configDependency) {
    // In case our key needs to be used as value checker.
    $configElement = $configDependency;
    if ($is_key) {
      $configElement = $key;
    }
    // Add new configuration.
    if ($operation == 'add') {
      if (!in_array($configElement, $clean_array)) {
        if (!is_array($configDependency)) {
          $clean_array[] = $configDependency;
        } else {
          $clean_array[$key] = $configDependency;
        }
      }
    }
    // Remove configuration.
    if ($operation == 'remove') {
      if ($configElement != $field_name) {
        if (!is_array($configDependency) && !in_array($configElement, $clean_array)) {
          $clean_array[] = $configDependency;
        } else {
          $clean_array[$key] = $configDependency;
        }
      }
    }
  }
  // Save the new settings.
  $defaultForm->set($setting, $clean_array);
  $defaultForm->save();
}


/**
 * Change the date format for default view mode.
 */
function degov_media_image_update_8009() {
  /** @var \Drupal\degov_common\DegovModuleUpdater $moduleUpdateService */
  $moduleUpdaterService = \Drupal::service('degov_config.module_updater');
  $moduleUpdaterService->applyUpdates('degov_media_image', '8009');
}
